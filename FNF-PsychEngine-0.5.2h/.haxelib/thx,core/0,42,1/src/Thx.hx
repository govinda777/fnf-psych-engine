typedef Assert = thx.Assert;
typedef AnonymousMap<T> = thx.AnonymousMap<T>;
typedef Arrays = thx.Arrays;
typedef ArrayFloats = thx.Arrays.ArrayFloats;
typedef ArrayInts = thx.Arrays.ArrayInts;
typedef ArrayStrings = thx.Arrays.ArrayStrings;
typedef BigInt = thx.BigInt;
typedef Bools = thx.Bools;
typedef Char = thx.Char;
typedef Chars = thx.Chars;
typedef Conditions = thx.Conditions;
typedef Dates = thx.Dates;
typedef DateTime = thx.DateTime;
typedef DateTimeUtc = thx.DateTimeUtc;
typedef Decimal = thx.Decimal;
typedef Dynamics = thx.Dynamics;
typedef Either<Left, Right> = thx.Either<Left, Right>;
typedef Eithers = thx.Eithers;
typedef Enums = thx.Enums;
typedef ERegs = thx.ERegs;
typedef Error = thx.Error;
typedef Floats = thx.Floats;
typedef HashSet<T : { function hashCode() : Int; }> = thx.HashSet<T>;
typedef HaxeMath = Math;
typedef LocalDate = thx.LocalDate;
typedef Functions0 = thx.Functions.Functions0;
typedef Functions1 = thx.Functions.Functions1;
typedef Functions2 = thx.Functions.Functions2;
typedef Functions3 = thx.Functions.Functions3;
typedef Functions = thx.Functions;
typedef Int64s = thx.Int64s;
typedef Ints = thx.Ints;
typedef Iterables = thx.Iterables;
typedef Iterators = thx.Iterators;
typedef Maps = thx.Maps;
typedef Nil = thx.Nil;
typedef Nothing = thx.Nothing;
typedef Unit = thx.Unit;
typedef Nulls = thx.Nulls;
typedef Objects = thx.Objects;
typedef Path = thx.Path;
typedef OrderedMap<Key, Value> = thx.OrderedMap<Key, Value>;
typedef OrderedSet<Value> = thx.OrderedSet<Value>;
typedef QueryString = thx.QueryString;
typedef ReadonlyArray<T> = thx.ReadonlyArray<T>;
typedef Rational = thx.Rational;
typedef Result<Success, Failure> = thx.Result<Success, Failure>;
typedef Set<Value> = thx.Set<Value>;
//typedef StaticResource = thx.StaticResource;
typedef HaxeStringTools = StringTools;
typedef Strings = thx.Strings;
typedef Nel<A> = thx.Nel<A>;
typedef Time = thx.Time;
typedef TimePeriod = thx.TimePeriod;
typedef Timer = thx.Timer;
typedef Timestamp = thx.Timestamp;
typedef Tuple0 = thx.Tuple.Tuple0;
typedef Tuple1<A> = thx.Tuple.Tuple1<A>;
typedef Tuple<A, B>  = thx.Tuple.Tuple2<A, B>;
typedef Tuple2<A, B> = thx.Tuple.Tuple2<A, B>;
typedef Tuple3<A, B, C> = thx.Tuple.Tuple3<A, B, C>;
typedef Tuple4<A, B, C, D> = thx.Tuple.Tuple4<A, B, C, D>;
typedef Tuple5<A, B, C, D, E> = thx.Tuple.Tuple5<A, B, C, D, E>;
typedef Tuple6<A, B, C, D, E, F> = thx.Tuple.Tuple6<A, B, C, D, E, F>;
typedef Types = thx.Types;
typedef Url = thx.Url;
typedef Uuid = thx.Uuid;
typedef Validation<E, A> = thx.Validation<E, A>;
typedef VNel<E, A> = thx.Validation.VNel<E, A>;
typedef Weekday = thx.Weekday;
typedef AbstractMethod = thx.error.AbstractMethod;
typedef NotImplemented = thx.error.NotImplemented;
typedef NullArgument = thx.error.NullArgument;
